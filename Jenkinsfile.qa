pipeline {
    agent any

    environment {
        BRANCH_NAME = 'v2.0.0'  // Rama para Desarrollo
        CONTAINER_NAME = 'microservicio-qa'
    }

    stages {
        stage('Stop and Remove Old Container') {
      steps {
        script {
          try {
            // Intentamos detener y eliminar el contenedor antiguo si existe
            sh 'docker stop ${CONTAINER_NAME} || true' // || true asegura que no falle si no existe
            sh 'docker rm ${CONTAINER_NAME} || true'   // || true asegura que no falle si no existe
                    } catch (Exception e) {
            echo "No existing container found or other error: ${e}"
          }
        }
      }
        }
        stage('Checkout') {
        steps {
          git branch: "${BRANCH_NAME}", url: 'https://github.com/ignavela/test-cicd.git'
        }
        }

        stage('Build Docker Image') {
        steps {
          script {
            def image = docker.build("${CONTAINER_NAME}", "--tag ${CONTAINER_NAME}:latest --tag ${CONTAINER_NAME}:${BUILD_NUMBER} .")
          }
        }
        }

        stage('Deploy to QA') {
        steps {
          echo 'Desplegando la imagen de QA...'
          sh 'docker run -d -p 8082:8081 --name ${CONTAINER_NAME} ${CONTAINER_NAME}:latest'
        }
        }
    }

    triggers {
        pollSCM('* * * * *')  // Ejecutar cada vez que haya un commit en la rama
    }

}
