pipeline {
    agent any

    environment {
        BRANCH_NAME = 'develop'  // Rama para Desarrollo
        DOCKER_IMAGE = 'microservicio-dev'
    }

    stages {
        stage('Stop and Remove Old Container') {
      steps {
        script {
          try {
            // Intentamos detener y eliminar el contenedor antiguo si existe
            sh 'docker stop ${DOCKER_IMAGE} || true' // || true asegura que no falle si no existe
            sh 'docker rm ${DOCKER_IMAGE} || true'   // || true asegura que no falle si no existe
                    } catch (Exception e) {
            echo "No existing container found or other error: ${e}"
          }
        }
      }
        }
        stage('Checkout') {
        steps {
          git branch: "${BRANCH_NAME}", url: 'https://github.com/ignavela/test-cicd.git'
        }
        }

        stage('Build Docker Image') {
      steps {
        script {
          // Construir la imagen Docker
          def buildNumber = env.BUILD_NUMBER
          docker.build("${DOCKER_IMAGE}:${buildNumber}")
          docker.build("${DOCKER_IMAGE}:latest")
        }
      }
        }

        stage('Deploy to Develop') {
        steps {
          echo 'Desplegando la imagen en Desarrollo...'
          sh 'docker run -d -p 8081:8081 --name ${DOCKER_IMAGE} ${DOCKER_IMAGE}:latest'
        }
        }

        stage('Cleanup Old Docker Images') {
      steps {
        script {
          // Mantener las últimas 5 imágenes y eliminar las anteriores
          def images = sh(
                        script: "docker images --format '{{.Repository}}:{{.Tag}} {{.CreatedAt}}' | grep '^${DOCKER_IMAGE}' | sort -r | tail -n +6",
                        returnStdout: true
                    ).trim()

          if (images) {
            // Convertir la lista de imágenes a una lista de strings y eliminar
            def oldImages = images.split('\n')
            oldImages.each { image ->
              def imageName = image.split(' ')[0]
              sh "docker rmi -f ${imageName}"
            }
                    } else {
            echo 'No old images to remove.'
          }
        }
      }
        }
    }
}
